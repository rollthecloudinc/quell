name: Druid
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
    secrets:
      RTC_GITHUB_REGISTRY:
        required: true
      ENVIRONMENT_NAME:
        required: true
      SSH_DEPLOY_KEY:
        required: true
      DESTINATION_REPO:
        required: true
      DESTINATION_USER:
        required: false
      TARGET_BRANCH:
        required: true
      OBJECTS_REPO:
        required: true
      ENABLE_GZIP:
        required: false
jobs:
  dev-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout Site
      - run: echo ${{ secrets.OBJECTS_REPO }}
        name: Print Objects Repo
      - uses: actions/checkout@v3
        name: Checkout Objects
        with:
          repository: ${{ secrets.OBJECTS_REPO }}
          ref: ${{ secrets.TARGET_BRANCH }}
          path: "projects/spear/src/assets/objects"
          set-safe-directory: false
      - name: Delete Objects Git Directory
        run: rm -Rf projects/spear/src/assets/objects/.git
      - run: echo "::set-output name=objects::$(ls projects/spear/src/assets/objects/panelpage/*.json | jq -R -s -c 'split("\n")[:-1]')"
        name: Parse JSON object files
        id: jsonobjects
      - run: echo ${{ steps.jsonobjects.outputs.objects }}
        name: Print json objects
      - run: echo -e "export const panelpages = [" > projects/spear/src/data/panelpages.ts
        name: Create panelpages.ts
      - run: awk 'FNR==1 && NR!=1 {print ","}{print}' $(echo '${{ steps.jsonobjects.outputs.objects }}' | jq -c 'join(" ")' | rev | cut -c2-100000 | rev | cut -c2-100000 )  >> projects/spear/src/data/panelpages.ts
        name: Write panel page objects
      - run: echo '];' >> projects/spear/src/data/panelpages.ts
        name: End panelpages.ts
      - run: cp projects/spear/src/data/panelpages.ts projects/spear/src/assets/objects/panelpages.ts
        name: Copy panelpages.ts to assets for reference/debugging
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: 22
          registry-url: "https://npm.pkg.github.com"
      - run: npm i gzipper -g
        name: Install gzipper
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RTC_GITHUB_REGISTRY }}
      - run: npm install --force
        name: Install packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RTC_GITHUB_REGISTRY }}
      - run: npm run prerender:${{ secrets.ENVIRONMENT_NAME }}
      - run: echo "::set-output name=stamp::$(date +'%Y%m%d%H%M%S')"
        name: Generate Release Stamp
        id: release
      - name: Push to build repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 'dist/spear'
          destination-github-username: ${{ secrets.DESTINATION_USER || 'rollthecloudinc' }}
          destination-repository-name: ${{ secrets.DESTINATION_REPO }}
          target-branch: ${{ secrets.TARGET_BRANCH }}